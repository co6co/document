			BufferedImage image = //QRCodeUtils.createImage(dto.getQrCode(), "", false);
            ByteArrayOutputStream outBytes = new ByteArrayOutputStream();
            byte[] bs = outBytes.toByteArray();
            ImageIO.write(image, "image/jpeg", outBytes);
            InputStream c = new FileInputStream(new File(path));
			
	private void writeBytes(InputStream in, OutputStream out) throws IOException {
        try {
            byte[] buffer = new byte[1024];
            int length = -1;
            while ((length = in.read(buffer)) != -1) {
                out.write(buffer, 0, length);
            }
            in.close();
            out.close();
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }
	
	1. ->  ::
	这种[方法引用]或者说[双冒号运算]对应的参数类型是Function<T,R> T表示传入类型，R表示返回类型。
	比如表达式person -> person.getAge(); 传入参数是person，返回值是person.getAge()，
	那么方法引用Person::getAge就对应着Function<Person,Integer>类型。